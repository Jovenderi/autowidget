<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Virtual Game Widgets</title>
    <script src="https://cdnjs.cloudflare.aom/ajax/libs/xlsx/0.18.5/xlsx.full.min.js"></script>
    <style>
        :root {
            --primary-color: #ff6a00;
            --bg-color: #ffffff;
            --text-color: #333333;
            --card-bg: #f8f9fa;
            --border-color: #e0e0e0;
            --input-bg: #ffffff;
            --textarea-bg: #ffffff;
        }

        [data-theme="dark"] {
            --bg-color: #1a1a1a;
            --text-color: #e0e0e0;
            --card-bg: #2d2d2d;
            --border-color: #404040;
            --input-bg: #333333;
            --textarea-bg: #2a2a2a;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background-color: var(--bg-color);
            color: var(--text-color);
            line-height: 1.6;
            transition: all 0.3s ease;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }

        .header {
            text-align: center;
            margin-bottom: 30px;
            position: relative;
        }

        .header h1 {
            color: var(--primary-color);
            font-size: 2.5em;
            margin-bottom: 10px;
        }

        .theme-toggle {
            position: absolute;
            top: 0;
            right: 0;
            background: var(--primary-color);
            color: white;
            border: none;
            padding: 10px 15px;
            border-radius: 25px;
            cursor: pointer;
            font-size: 14px;
            transition: all 0.3s ease;
        }

        .theme-toggle:hover {
            transform: scale(1.05);
            box-shadow: 0 4px 15px rgba(255, 106, 0, 0.3);
        }

        .upload-section {
            background: var(--card-bg);
            border: 2px dashed var(--border-color);
            border-radius: 10px;
            padding: 30px;
            text-align: center;
            margin-bottom: 30px;
            transition: all 0.3s ease;
        }

        .upload-section:hover {
            border-color: var(--primary-color);
            transform: translateY(-2px);
        }

        .file-input {
            display: none;
        }

        .file-label {
            background: var(--primary-color);
            color: white;
            padding: 12px 30px;
            border-radius: 25px;
            cursor: pointer;
            display: inline-block;
            font-weight: 500;
            transition: all 0.3s ease;
        }

        .file-label:hover {
            transform: scale(1.05);
            box-shadow: 0 4px 15px rgba(255, 106, 0, 0.3);
        }

        .sheet-selector {
            margin: 20px 0;
        }

        .sheet-selector select {
            background: var(--input-bg);
            color: var(--text-color);
            border: 2px solid var(--border-color);
            padding: 10px 15px;
            border-radius: 8px;
            font-size: 16px;
            min-width: 200px;
        }

        .sheet-selector select:focus {
            outline: none;
            border-color: var(--primary-color);
        }

        .inputs-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }

        .input-group {
            background: var(--card-bg);
            padding: 20px;
            border-radius: 10px;
            border: 1px solid var(--border-color);
        }

        .input-group label {
            display: block;
            margin-bottom: 8px;
            font-weight: 500;
            color: var(--primary-color);
        }

        .input-group input {
            width: 100%;
            padding: 10px;
            border: 2px solid var(--border-color);
            border-radius: 8px;
            font-size: 16px;
            background: var(--input-bg);
            color: var(--text-color);
            transition: border-color 0.3s ease;
        }

        .input-group input:focus {
            outline: none;
            border-color: var(--primary-color);
        }

        .generate-btn {
            background: linear-gradient(135deg, var(--primary-color), #ff8533);
            color: white;
            border: none;
            padding: 15px 40px;
            border-radius: 25px;
            font-size: 18px;
            font-weight: 600;
            cursor: pointer;
            display: block;
            margin: 30px auto;
            transition: all 0.3s ease;
        }

        .generate-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(255, 106, 0, 0.4);
        }

        .generate-btn:disabled {
            opacity: 0.6;
            cursor: not-allowed;
            transform: none;
        }

        .results-section {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 20px;
            margin-top: 30px;
        }

        .result-group {
            background: var(--card-bg);
            padding: 20px;
            border-radius: 10px;
            border: 1px solid var(--border-color);
        }

        .result-group h3 {
            color: var(--primary-color);
            margin-bottom: 15px;
            font-size: 1.2em;
        }

        .result-textarea {
            width: 100%;
            height: 400px;
            padding: 15px;
            border: 2px solid var(--border-color);
            border-radius: 8px;
            font-family: 'Courier New', monospace;
            font-size: 14px;
            background: var(--textarea-bg);
            color: var(--text-color);
            resize: vertical;
            margin-bottom: 15px;
        }

        .result-textarea:focus {
            outline: none;
            border-color: var(--primary-color);
        }

        .copy-btn {
            background: var(--primary-color);
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 8px;
            cursor: pointer;
            font-weight: 500;
            transition: all 0.3s ease;
            width: 100%;
        }

        .copy-btn:hover {
            background: #ff8533;
            transform: translateY(-1px);
        }

        .copy-btn.copied {
            background: #28a745;
        }

        .error-message {
            background: #f8d7da;
            color: #721c24;
            padding: 15px;
            border-radius: 8px;
            margin: 20px 0;
            border: 1px solid #f5c6cb;
        }

        [data-theme="dark"] .error-message {
            background: #2d1b1f;
            color: #f8d7da;
            border-color: #4a2c2a;
        }

        .success-message {
            background: #d4edda;
            color: #155724;
            padding: 15px;
            border-radius: 8px;
            margin: 20px 0;
            border: 1px solid #c3e6cb;
        }

        [data-theme="dark"] .success-message {
            background: #1b2d1f;
            color: #d4edda;
            border-color: #2a4a2c;
        }

        @media (max-width: 768px) {
            .results-section {
                grid-template-columns: 1fr;
            }
            
            .inputs-grid {
                grid-template-columns: 1fr;
            }
            
            .header h1 {
                font-size: 2em;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>Virtual Game Widgets</h1>
            <button class="theme-toggle" onclick="toggleTheme()">üåô Dark Mode</button>
        </div>

        <div class="upload-section">
            <input type="file" id="fileInput" class="file-input" accept=".xlsx,.xls" onchange="handleFile(event)">
            <label for="fileInput" class="file-label">üìÅ Select Excel File</label>
            <p style="margin-top: 15px; color: #666;">Choose an Excel file to import data from specific cells</p>
            
            <div class="sheet-selector" id="sheetSelector" style="display: none;">
                <label for="sheetSelect">Select Sheet:</label>
                <select id="sheetSelect" onchange="loadSheetData()">
                    <option value="">Choose a sheet...</option>
                </select>
            </div>
        </div>

        <div id="inputsSection" style="display: none;">
            <div class="inputs-grid">
                <div class="input-group">
                    <label for="input1">Input 1 - English Title (B1)</label>
                    <input type="text" id="input1" placeholder="English Title">
                </div>
                <div class="input-group">
                    <label for="input2">Input 2 - Localized Title (B2)</label>
                    <input type="text" id="input2" placeholder="Localized Title">
                </div>
                <div class="input-group">
                    <label for="input3">Input 3 - Widget Name (B3)</label>
                    <input type="text" id="input3" placeholder="Widget Name">
                </div>
                <div class="input-group">
                    <label for="input4">Input 4 - English Game1 (B10)</label>
                    <input type="text" id="input4" placeholder="English - Game1">
                </div>
                <div class="input-group">
                    <label for="input5">Input 5 - Localized Game1 (C10)</label>
                    <input type="text" id="input5" placeholder="Localized - Game 1">
                </div>
                <div class="input-group">
                    <label for="input6">Input 6 - Game Code 1 (D10)</label>
                    <input type="text" id="input6" placeholder="Game Code 1">
                </div>
                <div class="input-group">
                    <label for="input7">Input 7 - English Game2 (B11)</label>
                    <input type="text" id="input7" placeholder="English - Game2">
                </div>
                <div class="input-group">
                    <label for="input8">Input 8 - Localized Game2 (C11)</label>
                    <input type="text" id="input8" placeholder="Localized - Game 2">
                </div>
                <div class="input-group">
                    <label for="input9">Input 9 - Game Code 2 (D11)</label>
                    <input type="text" id="input9" placeholder="Game Code 2">
                </div>
                <div class="input-group">
                    <label for="input10">Input 10 - English Game3 (B12)</label>
                    <input type="text" id="input10" placeholder="English - Game 3">
                </div>
                <div class="input-group">
                    <label for="input11">Input 11 - Localized Game3 (C12)</label>
                    <input type="text" id="input11" placeholder="Localized - Game 3">
                </div>
                <div class="input-group">
                    <label for="input12">Input 12 - Game Code 3 (D12)</label>
                    <input type="text" id="input12" placeholder="Game Code 3">
                </div>
            </div>

            <button class="generate-btn" onclick="generateCode()">üöÄ Generate Code</button>
        </div>

        <div class="results-section" id="resultsSection" style="display: none;">
            <div class="result-group">
                <h3>English Code</h3>
                <textarea id="englishCode" class="result-textarea" readonly></textarea>
                <button class="copy-btn" onclick="copyToClipboard('englishCode', this)">üìã Copy English Code</button>
            </div>
            <div class="result-group">
                <h3>Localized Code</h3>
                <textarea id="localizedCode" class="result-textarea" readonly></textarea>
                <button class="copy-btn" onclick="copyToClipboard('localizedCode', this)">üìã Copy Localized Code</button>
            </div>
        </div>

        <div id="messages"></div>
    </div>

    <script>
        let workbook = null;
        let currentSheet = null;

        function toggleTheme() {
            const body = document.body;
            const currentTheme = body.getAttribute('data-theme');
            const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
            body.setAttribute('data-theme', newTheme);
            
            const button = document.querySelector('.theme-toggle');
            button.textContent = newTheme === 'dark' ? '‚òÄÔ∏è Light Mode' : 'üåô Dark Mode';
        }

        function showMessage(message, type = 'error') {
            const messagesDiv = document.getElementById('messages');
            messagesDiv.innerHTML = `<div class="${type}-message">${message}</div>`;
            setTimeout(() => {
                messagesDiv.innerHTML = '';
            }, 5000);
        }

        function handleFile(event) {
            const file = event.target.files[0];
            if (!file) return;

            const reader = new FileReader();
            reader.onload = function(e) {
                try {
                    const data = new Uint8Array(e.target.result);
                    workbook = XLSX.read(data, { type: 'array' });
                    
                    // Populate sheet selector
                    const sheetSelect = document.getElementById('sheetSelect');
                    sheetSelect.innerHTML = '<option value="">Choose a sheet...</option>';
                    
                    workbook.SheetNames.forEach(sheetName => {
                        const option = document.createElement('option');
                        option.value = sheetName;
                        option.textContent = sheetName;
                        sheetSelect.appendChild(option);
                    });
                    
                    document.getElementById('sheetSelector').style.display = 'block';
                    showMessage('Excel file loaded successfully! Please select a sheet.', 'success');
                } catch (error) {
                    showMessage('Error reading Excel file: ' + error.message);
                }
            };
            reader.readAsArrayBuffer(file);
        }

        function loadSheetData() {
            const sheetSelect = document.getElementById('sheetSelect');
            const selectedSheet = sheetSelect.value;
            
            if (!selectedSheet || !workbook) return;

            try {
                currentSheet = workbook.Sheets[selectedSheet];
                
                // Extract data from specific cells
                const cellData = {
                    B1: getCellValue('B1'),
                    B2: getCellValue('B2'),
                    B3: getCellValue('B3'),
                    B10: getCellValue('B10'),
                    C10: getCellValue('C10'),
                    D10: getCellValue('D10'),
                    B11: getCellValue('B11'),
                    C11: getCellValue('C11'),
                    D11: getCellValue('D11'),
                    B12: getCellValue('B12'),
                    C12: getCellValue('C12'),
                    D12: getCellValue('D12')
                };

                // Populate input fields
                document.getElementById('input1').value = cellData.B1 || '';
                document.getElementById('input2').value = cellData.B2 || '';
                document.getElementById('input3').value = cellData.B3 || '';
                document.getElementById('input4').value = cellData.B10 || '';
                document.getElementById('input5').value = cellData.C10 || '';
                document.getElementById('input6').value = cellData.D10 || '';
                document.getElementById('input7').value = cellData.B11 || '';
                document.getElementById('input8').value = cellData.C11 || '';
                document.getElementById('input9').value = cellData.D11 || '';
                document.getElementById('input10').value = cellData.B12 || '';
                document.getElementById('input11').value = cellData.C12 || '';
                document.getElementById('input12').value = cellData.D12 || '';

                document.getElementById('inputsSection').style.display = 'block';
                showMessage('Sheet data loaded successfully!', 'success');
            } catch (error) {
                showMessage('Error loading sheet data: ' + error.message);
            }
        }

        function getCellValue(cellAddress) {
            if (!currentSheet || !currentSheet[cellAddress]) return '';
            return currentSheet[cellAddress].v || '';
        }

        function generateCode() {
            const inputs = {};
            for (let i = 1; i <= 12; i++) {
                inputs[`input${i}`] = document.getElementById(`input${i}`).value || '';
            }

            const englishCode = `<Teleport to="#virtual-custom-link">
  <CustomLink 
    data-track-content 
    data-content-name="${inputs.input4} - (PD-WDGT-Virtual)" 
    data-content-piece="${inputs.input4}- Catalog - (PD-WDGT-Virtual)"
    title="${inputs.input4}"
    :link="\`/\${langCode}/virtual#gameName=${inputs.input6}\`"
    class="prepend-hot-badge"
  ></CustomLink>
  
  <CustomLink 
    data-track-content 
    data-content-name="${inputs.input7} - (PD-WDGT-Virtual)" 
    data-content-piece="${inputs.input7} - Catalog - (PD-WDGT-Virtual)"
    title="${inputs.input7}"
    :link="\`/\${langCode}/virtual#gameName=${inputs.input9}\`"
    class="prepend-hot-badge"
  ></CustomLink>
	
   <CustomLink 
    data-track-content 
    data-content-name="${inputs.input10} - (PD-WDGT-Virtual)" 
    data-content-piece="${inputs.input10} - Catalog - (PD-WDGT-Virtual)"
    title="${inputs.input10}"
    :link="\`/\${langCode}/virtual#gameName=${inputs.input12}\`"
    class="prepend-hot-badge"
  ></CustomLink>	
</Teleport>`;

            const localizedCode = `<Teleport to="#virtual-custom-link">
  <CustomLink 
    data-track-content 
    data-content-name="${inputs.input4} - (PD-WDGT-Virtual)" 
    data-content-piece="${inputs.input4}- Catalog - (PD-WDGT-Virtual)"
    title="${inputs.input5}"
    :link="\`/\${langCode}/virtual#gameName=${inputs.input6}\`"
    class="prepend-hot-badge"
  ></CustomLink>
  
  <CustomLink 
    data-track-content 
    data-content-name="${inputs.input7} - (PD-WDGT-Virtual)" 
    data-content-piece="${inputs.input7} - Catalog - (PD-WDGT-Virtual)"
    title="${inputs.input8}"
    :link="\`/\${langCode}/virtual#gameName=${inputs.input9}\`"
    class="prepend-hot-badge"
  ></CustomLink>
	
   <CustomLink 
    data-track-content 
    data-content-name="${inputs.input10} - (PD-WDGT-Virtual)" 
    data-content-piece="${inputs.input10} - Catalog - (PD-WDGT-Virtual)"
    title="${inputs.input11}"
    :link="\`/\${langCode}/virtual#gameName=${inputs.input12}\`"
    class="prepend-hot-badge"
  ></CustomLink>	
</Teleport>`;

            document.getElementById('englishCode').value = englishCode;
            document.getElementById('localizedCode').value = localizedCode;
            document.getElementById('resultsSection').style.display = 'grid';
            
            showMessage('Code generated successfully!', 'success');
        }

        function copyToClipboard(textareaId, button) {
            const textarea = document.getElementById(textareaId);
            textarea.select();
            textarea.setSelectionRange(0, 99999); // For mobile devices
            
            try {
                document.execCommand('copy');
                button.textContent = '‚úÖ Copied!';
                button.classList.add('copied');
                
                setTimeout(() => {
                    button.textContent = textareaId === 'englishCode' ? 'üìã Copy English Code' : 'üìã Copy Localized Code';
                    button.classList.remove('copied');
                }, 2000);
            } catch (err) {
                showMessage('Failed to copy to clipboard');
            }
        }
    </script>
</body>
</html>
